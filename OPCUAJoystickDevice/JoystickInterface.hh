//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef _JOYSTICK_INTERFACE_HH
#define _JOYSTICK_INTERFACE_HH	

#include <string>
#include <OpcUaStatusCode.hh>

/**
 * This is the public C++ interface that needs to be implemented on
 * both sides (the client and the server)
 */
class JoystickInterface {
public:
	JoystickInterface() {  }
	virtual ~JoystickInterface() {  }

	/** XML Specific Getter function for variable Xpos
	 *
	 *  This function gets Xpos  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getXpos(int &xpos) const = 0;
	
	/** XML Specific Getter function for variable Ypos
	 *
	 *  This function gets Ypos  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getYpos(int &ypos) const = 0;
	
	/** XML Specific Getter function for variable X2pos
	 *
	 *  This function gets X2pos  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getX2pos(int &x2pos) const = 0;
	
	/** XML Specific Getter function for variable Y2pos
	 *
	 *  This function gets Y2pos  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getY2pos(int &y2pos) const = 0;
	
	/** XML Specific Getter function for variable BUTTONS
	 *
	 *  This function gets BUTTONS  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBUTTONS(int &bUTTONS) const = 0;
	
	/** XML Specific Getter function for variable BUTTON_0
	 *
	 *  This function gets BUTTON_0  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBUTTON_0(bool &bUTTON_0) const = 0;
	
	/** XML Specific Getter function for variable BUTTON_1
	 *
	 *  This function gets BUTTON_1  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBUTTON_1(bool &bUTTON_1) const = 0;
	
	/** XML Specific Getter function for variable BUTTON_2
	 *
	 *  This function gets BUTTON_2  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBUTTON_2(bool &bUTTON_2) const = 0;
	
	/** XML Specific Getter function for variable BUTTON_3
	 *
	 *  This function gets BUTTON_3  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBUTTON_3(bool &bUTTON_3) const = 0;
	
	/** XML Specific Getter function for variable BUTTON_4
	 *
	 *  This function gets BUTTON_4  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBUTTON_4(bool &bUTTON_4) const = 0;
	
	/** XML Specific Getter function for variable BUTTON_5
	 *
	 *  This function gets BUTTON_5  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBUTTON_5(bool &bUTTON_5) const = 0;
	
	/** XML Specific Getter function for variable BUTTON_6
	 *
	 *  This function gets BUTTON_6  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBUTTON_6(bool &bUTTON_6) const = 0;
	
	/** XML Specific Getter function for variable BUTTON_7
	 *
	 *  This function gets BUTTON_7  from the Server
	 *  When class Joystick is used with a Specific XML file to connect to
	 *  SeRoNet Servers which implements the device information model.
	 *	
	 *  @param value	:output parameter, returns the new value if StatusCode is ALL_OK
	 *
	 *  @return status code
	 *	- ALL_OK
	 *  - DISCONNECTED
	 *  - ERROR_COMMUNICATION
	 */
	virtual OPCUA::StatusCode getBUTTON_7(bool &bUTTON_7) const = 0;
	
};

#endif /* _JOYSTICK_INTERFACE_HH */
